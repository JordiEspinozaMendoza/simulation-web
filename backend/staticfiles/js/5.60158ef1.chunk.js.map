{"version":3,"sources":["actions/generatorActions.js","actions/smirnovActions.js","api/index.js","reducers/generatorReducers.js","reducers/smirnovReducers.js","constants/generatorConstants.js","constants/smirnovConstants.js","views/SmirnovView.js"],"names":["generatorActions","UPDATE_VALUE","SUBMIT_FORM","SUCCESS_GENERATOR","REQUEST_GENERATOR","RESET_GENERATOR","FAIL_GENERATOR","SET_DEFAULT_GENERATOR","SAVE_PSEUDO_NUMBERS","smirnovActions","SUCCESS_SMIRNOV","REQUEST_SMIRNOV","RESET_SMIRNOV","FAIL_SMIRNOV","SET_MODAL","callApi","url","method","body","constants","dispatch","a","REQUEST","SUCCESS","FAIL","type","axios","data","headers","payload","message","response","generatorReducers","state","action","actions","key","value","loading","error","pseudoNumbers","x0","c","m","localStorage","setItem","JSON","stringify","smirnovReducers","max","about","messageModal","titleModal","title","showModalCall","show","modalAction","hideModal","hide","generatorInitialState","success","undefined","smirnovInitialState","percent","numberGroups","ResponseContainer","styled","div","SmirnovView","useReducer","reducer","initialState","history","useHistory","getItem","parse","handleChange","event","target","name","onSubmit","preventDefault","toast","promise","e","onChange","length","className","onClick","push"],"mappings":"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","file":"static/js/5.60158ef1.chunk.js","sourcesContent":["export const generatorActions = {\n  UPDATE_VALUE: \"UPDATE_VALUE\",\n  SUBMIT_FORM: \"SUBMIT_FORM\",\n  SUCCESS_GENERATOR: \"SUCCESS_GENERATOR\",\n  REQUEST_GENERATOR: \"REQUEST_GENERATOR\",\n  RESET_GENERATOR: \"RESET_GENERATOR\",\n  FAIL_GENERATOR: \"FAIL_GENERATOR\",\n  SET_DEFAULT_GENERATOR: \"SET_DEFAULT_GENERATOR\",\n  SAVE_PSEUDO_NUMBERS: \"SAVE_PSEUDO_NUMBERS\"\n};\n","export const smirnovActions = {\n  UPDATE_VALUE: \"UPDATE_VALUE\",\n  SUBMIT_FORM: \"SUBMIT_FORM\",\n  SUCCESS_SMIRNOV: \"SUCCESS_SMIRNOV\",\n  REQUEST_SMIRNOV: \"REQUEST_SMIRNOV\",\n  RESET_SMIRNOV: \"RESET_SMIRNOV\",\n  FAIL_SMIRNOV: \"FAIL_SMIRNOV\",\n  SET_MODAL: \"SET_MODAL\",\n\n};\n","import axios from \"axios\";\n\nexport async function callApi(url, method, body, constants, dispatch) {\n  const { REQUEST, SUCCESS, FAIL } = constants;\n  try {\n    dispatch({ type: REQUEST });\n    const { data } = await axios({\n      method,\n      url: url,\n      data: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    dispatch({ type: SUCCESS, payload: data});\n  } catch (error) {\n    dispatch({\n      type: FAIL,\n      payload: error.message,\n    });\n    throw error.response?.data ? error.response.data : error.message;\n  }\n}\n","import { generatorActions as actions } from \"../actions\";\nexport const generatorReducers = (state = {}, action) => {\n  switch (action.type) {\n    case actions.UPDATE_VALUE:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    case actions.FAIL_GENERATOR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case actions.SUCCESS_GENERATOR:\n      return {\n        ...state,\n        loading: false,\n        response: action.payload.response,\n        pseudoNumbers: action.payload.pseudoNumbers,\n      };\n    case actions.REQUEST_GENERATOR:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SET_DEFAULT_GENERATOR:\n      return {\n        ...state,\n        x0: 17,\n        a: 101,\n        c: 221,\n        m: 17001,\n      };\n    case actions.SAVE_PSEUDO_NUMBERS:\n      state.response &&\n        localStorage.setItem(\"pseudo-numbers\", JSON.stringify(state.pseudoNumbers));\n      return state;\n  }\n};\n","import { smirnovActions as actions } from \"../actions\";\nexport const smirnovReducers = (state = {}, action) => {\n  switch (action.type) {\n    case actions.UPDATE_VALUE:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    case actions.FAIL_SMIRNOV:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case actions.SUCCESS_SMIRNOV:\n      return {\n        ...state,\n        loading: false,\n        response: {\n          max: action.payload[\"max\"],\n          message: action.payload[\"message\"],\n          about: action.payload[\"about\"],\n        },\n      };\n    case actions.REQUEST_SMIRNOV:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SET_MODAL:\n      return {\n        ...state,\n        messageModal: action.message,\n        titleModal: action.title,\n        showModalCall: action.show,\n        modalAction: action.action,\n        hideModal: action.hide,\n      };\n  }\n};\n","export const generatorInitialState = {\n  x0: 0,\n  a: 0,\n  c: 0,\n  m: 0,\n  loading: false,\n  error: false,\n  success: false,\n  message: \"\",\n  response: undefined,\n  pseudoNumbers: undefined,\n};\n","export const smirnovInitialState = {\n    percent: 0,\n    numberGroups: 0,\n    loading: false,\n    error: false,\n    success: false,\n    message: \"\",\n    response: undefined,\n    \n    titleModal: \"\",\n    messageModal: \"\",\n    showModalCall: false,\n    modalAction: null,\n    hideModal: false,    \n  };\n  ","import React, { useReducer } from \"react\";\nimport { PrimaryButton, SecondaryButton } from \"../components\";\nimport { Form, FormGroup, FormLabel, FormControl } from \"react-bootstrap\";\n\nimport { callApi } from \"../api\";\nimport { LoaderDots } from \"../components\";\nimport { ButtonsContainer, ContainerStyled } from \"../utils\";\nimport { ToastAlert } from \"../components\";\nimport toast from \"react-hot-toast\";\n\nimport { smirnovActions as actions } from \"../actions\";\nimport { smirnovReducers as reducer } from \"../reducers\";\nimport { smirnovInitialState as initialState } from \"../constants\";\n\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst ResponseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  margin-top: 2rem;\n  width: 80%;\n`;\nexport default function SmirnovView() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const history = useHistory();\n  const pseudoNumbers =\n    localStorage.getItem(\"pseudo-numbers\") &&\n    JSON.parse(localStorage.getItem(\"pseudo-numbers\"));\n  const returnToGenerator = () => {\n    history.push(\"/exercises/generator\");\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    dispatch({\n      type: actions.UPDATE_VALUE,\n      payload: {\n        key: name,\n        value,\n      },\n    });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    toast.promise(\n      callApi(\n        \"/api/smirnov/test/\",\n        \"POST\",\n        {\n          pseudoNumbers: pseudoNumbers,\n          percent: state?.percent,\n          numberGroups: state?.numberGroups,\n        },\n        {\n          SUCCESS: actions.SUCCESS_SMIRNOV,\n          FAIL: actions.FAIL_SMIRNOV,\n          REQUEST: actions.REQUEST_SMIRNOV,\n        },\n        dispatch\n      ),\n      {\n        loading: \"Realizando prueba de smirnov\",\n        success: \"Prueba finalizada\",\n        error: (e) => `${e}`,\n      }\n    );\n  };\n  return (\n    <ContainerStyled>\n      <h1>Prueba de Smirnov &#9997;</h1>\n\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <FormLabel>Porcentaje &#x25;</FormLabel>\n          <FormControl\n            value={state.percent}\n            type=\"number\"\n            name=\"percent\"\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormLabel>Número de grupos</FormLabel>\n          <FormControl\n            value={state?.numberGroups}\n            type=\"number\"\n            name=\"numberGroups\"\n            onChange={handleChange}\n          />\n        </FormGroup>\n        {pseudoNumbers ? (\n          <>\n            <FormLabel>\n              Total de números generados actualmente:{\" \"}\n              {pseudoNumbers[\"n\"].length}. <b className=\"b-link\">Ver números</b>\n            </FormLabel>\n            <br />\n            {state.loading ? (\n              <LoaderDots />\n            ) : (\n              <PrimaryButton type=\"submit\">Realizar test</PrimaryButton>\n            )}\n          </>\n        ) : (\n          <>\n            <FormLabel>\n              Aún no tienes números pseudoaleatorios generados 😥\n            </FormLabel>\n            <br />\n            <SecondaryButton onClick={returnToGenerator}>\n              Ir a generarlos\n            </SecondaryButton>\n          </>\n        )}\n      </Form>\n      {state.response && (\n        <ResponseContainer>\n          <h2>Resultados 💯</h2>\n          <span>\n            <b>Di de tablas </b>: {state.response.about}\n          </span>\n          <br />\n          <span>\n            <b>Di máximo</b>: {state.response.max}\n          </span>\n          <br />\n\n          <span>\n            <b>Resultado: </b>\n            {state.response.message}\n          </span>\n        </ResponseContainer>\n      )}\n      <ToastAlert />\n    </ContainerStyled>\n  );\n}\n"],"sourceRoot":""}