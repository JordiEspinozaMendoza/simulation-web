{"version":3,"sources":["actions/generatorActions.js","actions/smirnovActions.js","api/index.js","reducers/generatorReducers.js","reducers/smirnovReducers.js","constants/generatorConstants.js","constants/smirnovConstants.js","../node_modules/react-bootstrap/esm/Table.js","views/GeneratorView.js"],"names":["generatorActions","UPDATE_VALUE","SUBMIT_FORM","SUCCESS_GENERATOR","REQUEST_GENERATOR","RESET_GENERATOR","FAIL_GENERATOR","SET_DEFAULT_GENERATOR","SAVE_PSEUDO_NUMBERS","smirnovActions","SUCCESS_SMIRNOV","REQUEST_SMIRNOV","RESET_SMIRNOV","FAIL_SMIRNOV","SET_MODAL","callApi","url","method","body","constants","dispatch","a","REQUEST","SUCCESS","FAIL","type","axios","data","headers","payload","message","response","generatorReducers","state","action","actions","key","value","loading","error","pseudoNumbers","x0","c","m","localStorage","setItem","JSON","stringify","smirnovReducers","max","about","messageModal","titleModal","title","showModalCall","show","modalAction","hideModal","hide","generatorInitialState","success","undefined","smirnovInitialState","percent","numberGroups","Table","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","GeneratorView","useReducer","reducer","initialState","refPseudoNumbers","createRef","refEnd","history","useHistory","scrollTo","current","scrollIntoView","behavior","block","handleChange","event","target","name","changePage","push","onClick","Form","onSubmit","preventDefault","toast","promise","e","FormGroup","FormLabel","FormControl","onChange","style","marginTop","Col","sm","map","item","index","n","rn","xn","xn1","length"],"mappings":"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","file":"static/js/4.56ec1bcc.chunk.js","sourcesContent":["export const generatorActions = {\n  UPDATE_VALUE: \"UPDATE_VALUE\",\n  SUBMIT_FORM: \"SUBMIT_FORM\",\n  SUCCESS_GENERATOR: \"SUCCESS_GENERATOR\",\n  REQUEST_GENERATOR: \"REQUEST_GENERATOR\",\n  RESET_GENERATOR: \"RESET_GENERATOR\",\n  FAIL_GENERATOR: \"FAIL_GENERATOR\",\n  SET_DEFAULT_GENERATOR: \"SET_DEFAULT_GENERATOR\",\n  SAVE_PSEUDO_NUMBERS: \"SAVE_PSEUDO_NUMBERS\"\n};\n","export const smirnovActions = {\n  UPDATE_VALUE: \"UPDATE_VALUE\",\n  SUBMIT_FORM: \"SUBMIT_FORM\",\n  SUCCESS_SMIRNOV: \"SUCCESS_SMIRNOV\",\n  REQUEST_SMIRNOV: \"REQUEST_SMIRNOV\",\n  RESET_SMIRNOV: \"RESET_SMIRNOV\",\n  FAIL_SMIRNOV: \"FAIL_SMIRNOV\",\n  SET_MODAL: \"SET_MODAL\",\n\n};\n","import axios from \"axios\";\n\nexport async function callApi(url, method, body, constants, dispatch) {\n  const { REQUEST, SUCCESS, FAIL } = constants;\n  try {\n    dispatch({ type: REQUEST });\n    const { data } = await axios({\n      method,\n      url: url,\n      data: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    dispatch({ type: SUCCESS, payload: data});\n  } catch (error) {\n    dispatch({\n      type: FAIL,\n      payload: error.message,\n    });\n    throw error.response?.data ? error.response.data : error.message;\n  }\n}\n","import { generatorActions as actions } from \"../actions\";\nexport const generatorReducers = (state = {}, action) => {\n  switch (action.type) {\n    case actions.UPDATE_VALUE:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    case actions.FAIL_GENERATOR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case actions.SUCCESS_GENERATOR:\n      return {\n        ...state,\n        loading: false,\n        response: action.payload.response,\n        pseudoNumbers: action.payload.pseudoNumbers,\n      };\n    case actions.REQUEST_GENERATOR:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SET_DEFAULT_GENERATOR:\n      return {\n        ...state,\n        x0: 17,\n        a: 101,\n        c: 221,\n        m: 17001,\n      };\n    case actions.SAVE_PSEUDO_NUMBERS:\n      state.response &&\n        localStorage.setItem(\"pseudo-numbers\", JSON.stringify(state.pseudoNumbers));\n      return state;\n  }\n};\n","import { smirnovActions as actions } from \"../actions\";\nexport const smirnovReducers = (state = {}, action) => {\n  switch (action.type) {\n    case actions.UPDATE_VALUE:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    case actions.FAIL_SMIRNOV:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case actions.SUCCESS_SMIRNOV:\n      return {\n        ...state,\n        loading: false,\n        response: {\n          max: action.payload[\"max\"],\n          message: action.payload[\"message\"],\n          about: action.payload[\"about\"],\n        },\n      };\n    case actions.REQUEST_SMIRNOV:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SET_MODAL:\n      return {\n        ...state,\n        messageModal: action.message,\n        titleModal: action.title,\n        showModalCall: action.show,\n        modalAction: action.action,\n        hideModal: action.hide,\n      };\n  }\n};\n","export const generatorInitialState = {\n  x0: 0,\n  a: 0,\n  c: 0,\n  m: 0,\n  loading: false,\n  error: false,\n  success: false,\n  message: \"\",\n  response: undefined,\n  pseudoNumbers: undefined,\n};\n","export const smirnovInitialState = {\n    percent: 0,\n    numberGroups: 0,\n    loading: false,\n    error: false,\n    success: false,\n    message: \"\",\n    response: undefined,\n    \n    titleModal: \"\",\n    messageModal: \"\",\n    showModalCall: false,\n    modalAction: null,\n    hideModal: false,    \n  };\n  ","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React, { useReducer } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  Table,\n} from \"react-bootstrap\";\nimport { PrimaryButton, SecondaryButton } from \"../components\";\n\nimport { generatorReducers as reducer } from \"../reducers\";\nimport { generatorInitialState as initialState } from \"../constants\";\nimport { generatorActions as actions } from \"../actions\";\n\nimport { callApi } from \"../api\";\nimport { LoaderDots } from \"../components\";\nimport { ButtonsContainer, ContainerStyled } from \"../utils\";\nimport { ToastAlert } from \"../components\";\nimport toast from \"react-hot-toast\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function GeneratorView() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const refPseudoNumbers = React.createRef(null);\n  const refEnd = React.createRef(null);\n  const history = useHistory();\n\n  const scrollTo = (ref) => {\n    if (ref) {\n      ref.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  };\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    dispatch({\n      type: actions.UPDATE_VALUE,\n      payload: {\n        key: name,\n        value,\n      },\n    });\n  };\n  const changePage = (url) => {\n    history.push(url);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    toast.promise(\n      callApi(\n        \"/api/generator/generator/\",\n        \"POST\",\n        {\n          x0: state.x0,\n          a: state.a,\n          c: state.c,\n          m: state.m,\n        },\n        {\n          SUCCESS: actions.SUCCESS_GENERATOR,\n          FAIL: actions.FAIL_GENERATOR,\n          REQUEST: actions.REQUEST_GENERATOR,\n        },\n        dispatch\n      ),\n      {\n        loading: \"Generando números pseudoaleatorios\",\n        success: \"Números pseudoaleatorios generados correctamente\",\n        error: (e) => `${e}`,\n      }\n    );\n  };\n\n  return (\n    <ContainerStyled>\n      <ToastAlert />\n      <h1>Generador de números pseudoaleatorios &#9997;</h1>\n      <div className=\"usecondary-button-box\">\n        <SecondaryButton\n          onClick={() =>\n            dispatch({\n              type: actions.SET_DEFAULT_GENERATOR,\n            })\n          }\n        >\n          Usar números por default\n        </SecondaryButton>\n      </div>\n      {state && (\n        <>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <FormLabel>\n                Valor de <b>X0</b>\n              </FormLabel>\n              <FormControl\n                type=\"number\"\n                name=\"x0\"\n                value={state.x0}\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <FormLabel>\n                Valor de <b>a</b>\n              </FormLabel>\n              <FormControl\n                type=\"number\"\n                name=\"a\"\n                value={state.a}\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <FormLabel>\n                Valor de <b>c</b>\n              </FormLabel>\n              <FormControl\n                type=\"number\"\n                name=\"c\"\n                value={state.c}\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <FormLabel>\n                Valor de <b>m</b>\n              </FormLabel>\n              <FormControl\n                type=\"number\"\n                name=\"m\"\n                value={state.m}\n                onChange={handleChange}\n              />\n            </FormGroup>\n            {state.loading ? (\n              <LoaderDots />\n            ) : (\n              <PrimaryButton\n                type=\"submit\"\n                onClick={() => scrollTo(refPseudoNumbers)}\n              >\n                Generar\n              </PrimaryButton>\n            )}\n          </Form>\n          <h2 ref={refPseudoNumbers} style={{ marginTop: \"1rem\" }}>\n            {state.response ? \"Resultados 💯\" : \"\"}\n          </h2>\n          {state.response && (\n            <>\n              <ButtonsContainer className=\"mt-4\">\n                <Col sm={3}>\n                  <SecondaryButton onClick={() => scrollTo(refEnd)}>\n                    Ir al final de la tabla\n                  </SecondaryButton>\n                </Col>\n                <Col sm={3}>\n                  <SecondaryButton\n                    onClick={() => {\n                      dispatch({\n                        type: actions.SAVE_PSEUDO_NUMBERS,\n                      });\n                    }}\n                  >\n                    Guardar estos números &#x2705;\n                  </SecondaryButton>\n                </Col>\n                <Col sm={3}>\n                  <SecondaryButton\n                    onClick={() => {\n                      changePage(\"/exercises/tests/smirnov\");\n                      dispatch({\n                        type: actions.SAVE_PSEUDO_NUMBERS,\n                      });\n                    }}\n                  >\n                    Realizar prueba Smirnov\n                  </SecondaryButton>\n                </Col>\n                <Col sm={3}>\n                  <SecondaryButton\n                    onClick={() => {\n                      changePage(\"/exercises/tests/frequency\");\n                      dispatch({\n                        type: actions.SAVE_PSEUDO_NUMBERS,\n                      });\n                    }}\n                  >\n                    Realizar prueba frecuencia\n                  </SecondaryButton>\n                </Col>\n              </ButtonsContainer>\n\n              <Table\n                striped\n                hover\n                responsive\n                bordered\n                className=\"table-sm mt-4\"\n              >\n                <thead>\n                  <tr>\n                    <th>n</th>\n                    <th>Rn</th>\n                    <th>Xn</th>\n                    <th>Xn+1</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {state.response.map((item, index) => (\n                    <tr key={index}>\n                      <td>{item.n}</td>\n                      <td>{item.rn}</td>\n                      <td>{item.xn}</td>\n                      <td>{item.xn1}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n              <span className=\"mb-4\">\n                Genial! Generaste {state.response.length} números &#128079;\n              </span>\n              <SecondaryButton\n                className=\"mb-4\"\n                ref={refEnd}\n                onClick={() => scrollTo(refPseudoNumbers)}\n              >\n                Regresar al principio\n              </SecondaryButton>\n            </>\n          )}\n        </>\n      )}\n    </ContainerStyled>\n  );\n}\n"],"sourceRoot":""}