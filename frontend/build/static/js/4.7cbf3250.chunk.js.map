{"version":3,"sources":["actions/generatorActions.js","actions/smirnovActions.js","actions/frequencyActions.js","api/index.js","reducers/generatorReducers.js","reducers/smirnovReducers.js","reducers/frequencyReducers.js","constants/generatorConstants.js","constants/smirnovConstants.js","constants/frequencyConstants.js","../node_modules/react-bootstrap/esm/Table.js","views/FrequencyView.js"],"names":["generatorActions","UPDATE_VALUE","SUBMIT_FORM","SUCCESS_GENERATOR","REQUEST_GENERATOR","RESET_GENERATOR","FAIL_GENERATOR","SET_DEFAULT_GENERATOR","SAVE_PSEUDO_NUMBERS","smirnovActions","SUCCESS_SMIRNOV","REQUEST_SMIRNOV","RESET_SMIRNOV","FAIL_SMIRNOV","SET_MODAL","frequencyActions","SUCCESS_FREQUENCY","REQUEST_FREQUENCY","RESET_FREQUENCY","FAIL_FREQUENCY","callApi","url","method","body","constants","dispatch","a","REQUEST","SUCCESS","FAIL","type","axios","data","headers","payload","message","generatorReducers","state","action","actions","key","value","loading","error","response","pseudoNumbers","x0","c","m","localStorage","setItem","JSON","stringify","smirnovReducers","max","about","messageModal","titleModal","title","showModalCall","show","modalAction","hideModal","hide","frequencyReducers","console","log","generatorInitialState","success","undefined","smirnovInitialState","percent","numberGroups","frequencyInitialState","alpha","Table","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","alphaValues","styled","div","FrequencyView","useReducer","reducer","initialState","history","useHistory","getItem","parse","handleChange","event","target","name","useEffect","onSubmit","preventDefault","toast","promise","e","as","onChange","map","index","length","onClick","push","dfFrequency","item"],"mappings":"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","file":"static/js/4.7cbf3250.chunk.js","sourcesContent":["export const generatorActions = {\n  UPDATE_VALUE: \"UPDATE_VALUE\",\n  SUBMIT_FORM: \"SUBMIT_FORM\",\n  SUCCESS_GENERATOR: \"SUCCESS_GENERATOR\",\n  REQUEST_GENERATOR: \"REQUEST_GENERATOR\",\n  RESET_GENERATOR: \"RESET_GENERATOR\",\n  FAIL_GENERATOR: \"FAIL_GENERATOR\",\n  SET_DEFAULT_GENERATOR: \"SET_DEFAULT_GENERATOR\",\n  SAVE_PSEUDO_NUMBERS: \"SAVE_PSEUDO_NUMBERS\"\n};\n","export const smirnovActions = {\n  UPDATE_VALUE: \"UPDATE_VALUE\",\n  SUBMIT_FORM: \"SUBMIT_FORM\",\n  SUCCESS_SMIRNOV: \"SUCCESS_SMIRNOV\",\n  REQUEST_SMIRNOV: \"REQUEST_SMIRNOV\",\n  RESET_SMIRNOV: \"RESET_SMIRNOV\",\n  FAIL_SMIRNOV: \"FAIL_SMIRNOV\",\n  SET_MODAL: \"SET_MODAL\",\n\n};\n","export const frequencyActions = {\n    UPDATE_VALUE: \"UPDATE_VALUE\",\n    SUBMIT_FORM: \"SUBMIT_FORM\",\n    SUCCESS_FREQUENCY: \"SUCCESS_FREQUENCY\",\n    REQUEST_FREQUENCY: \"REQUEST_FREQUENCY\",\n    RESET_FREQUENCY: \"RESET_FREQUENCY\",\n    FAIL_FREQUENCY: \"FAIL_FREQUENCY\",\n    SET_MODAL: \"SET_MODAL\",\n  \n  };\n  ","import axios from \"axios\";\n\nexport async function callApi(url, method, body, constants, dispatch) {\n  const { REQUEST, SUCCESS, FAIL } = constants;\n  try {\n    dispatch({ type: REQUEST });\n    const { data } = await axios({\n      method,\n      url: url,\n      data: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    dispatch({ type: SUCCESS, payload: data});\n  } catch (error) {\n    dispatch({\n      type: FAIL,\n      payload: error.message,\n    });\n    throw \"Ingresa parametros correctos\"\n  }\n}\n","import { generatorActions as actions } from \"../actions\";\nexport const generatorReducers = (state = {}, action) => {\n  switch (action.type) {\n    case actions.UPDATE_VALUE:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    case actions.FAIL_GENERATOR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case actions.SUCCESS_GENERATOR:\n      return {\n        ...state,\n        loading: false,\n        response: action.payload.response,\n        pseudoNumbers: action.payload.pseudoNumbers,\n      };\n    case actions.REQUEST_GENERATOR:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SET_DEFAULT_GENERATOR:\n      return {\n        ...state,\n        x0: 17,\n        a: 101,\n        c: 221,\n        m: 17001,\n      };\n    case actions.SAVE_PSEUDO_NUMBERS:\n      state.response &&\n        localStorage.setItem(\"pseudo-numbers\", JSON.stringify(state.pseudoNumbers));\n      return state;\n  }\n};\n","import { smirnovActions as actions } from \"../actions\";\nexport const smirnovReducers = (state = {}, action) => {\n  switch (action.type) {\n    case actions.UPDATE_VALUE:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    case actions.FAIL_SMIRNOV:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case actions.SUCCESS_SMIRNOV:\n      return {\n        ...state,\n        loading: false,\n        response: {\n          max: action.payload[\"max\"],\n          message: action.payload[\"message\"],\n          about: action.payload[\"about\"],\n        },\n      };\n    case actions.REQUEST_SMIRNOV:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SET_MODAL:\n      return {\n        ...state,\n        messageModal: action.message,\n        titleModal: action.title,\n        showModalCall: action.show,\n        modalAction: action.action,\n        hideModal: action.hide,\n      };\n  }\n};\n","import { frequencyActions as actions } from \"../actions\";\nexport const frequencyReducers = (state = {}, action) => {\n  switch (action.type) {\n    case actions.UPDATE_VALUE:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    case actions.FAIL_FREQUENCY:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case actions.SUCCESS_FREQUENCY:\n      console.log(action.payload);\n      return {\n        ...state,\n        loading: false,\n        response: action.payload,\n      };\n    case actions.REQUEST_FREQUENCY:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SET_MODAL:\n      return {\n        ...state,\n        messageModal: action.message,\n        titleModal: action.title,\n        showModalCall: action.show,\n        modalAction: action.action,\n        hideModal: action.hide,\n      };\n  }\n};\n","export const generatorInitialState = {\n  x0: 0,\n  a: 0,\n  c: 0,\n  m: 0,\n  loading: false,\n  error: false,\n  success: false,\n  message: \"\",\n  response: undefined,\n  pseudoNumbers: undefined,\n};\n","export const smirnovInitialState = {\n    percent: 0,\n    numberGroups: 0,\n    loading: false,\n    error: false,\n    success: false,\n    message: \"\",\n    response: undefined,\n    \n    titleModal: \"\",\n    messageModal: \"\",\n    showModalCall: false,\n    modalAction: null,\n    hideModal: false,    \n  };\n  ","export const frequencyInitialState = {\n    alpha: 0,\n    numberGroups: 0,\n    loading: false,\n    error: false,\n    success: false,\n    message: \"\",\n    response: undefined,\n    \n    titleModal: \"\",\n    messageModal: \"\",\n    showModalCall: false,\n    modalAction: null,\n    hideModal: false,    \n  };\n  ","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React, { useReducer } from \"react\";\nimport { PrimaryButton, SecondaryButton } from \"../components\";\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  Table,\n} from \"react-bootstrap\";\n\nimport { callApi } from \"../api\";\nimport { LoaderDots } from \"../components\";\nimport { ContainerStyled } from \"../utils\";\nimport { ToastAlert } from \"../components\";\nimport toast from \"react-hot-toast\";\n\nimport { frequencyActions as actions } from \"../actions\";\nimport { frequencyReducers as reducer } from \"../reducers\";\nimport { frequencyInitialState as initialState } from \"../constants\";\n\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nconst alphaValues = [\n  0.001, 0.0025, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 0.1, 0.15, 0.2, 0.25,\n  0.3, 0.35, 0.4, 0.45, 0.5,\n];\nconst ResponseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  margin-top: 2rem;\n  width: 80%;\n`;\n\nexport default function FrequencyView() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const history = useHistory();\n  const pseudoNumbers =\n    localStorage.getItem(\"pseudo-numbers\") &&\n    JSON.parse(localStorage.getItem(\"pseudo-numbers\"));\n  const returnToGenerator = () => {\n    history.push(\"/exercises/generator\");\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    dispatch({\n      type: actions.UPDATE_VALUE,\n      payload: {\n        key: name,\n        value,\n      },\n    });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    toast.promise(\n      callApi(\n        \"/api/frequency/test/\",\n        \"POST\",\n        {\n          pseudoNumbers: pseudoNumbers,\n          alpha: state?.alpha,\n          numberGroups: state?.numberGroups,\n        },\n        {\n          SUCCESS: actions.SUCCESS_FREQUENCY,\n          FAIL: actions.FAIL_FREQUENCY,\n          REQUEST: actions.REQUEST_FREQUENCY,\n        },\n        dispatch\n      ),\n      {\n        loading: \"Realizando prueba de frequencia\",\n        success: \"Prueba finalizada\",\n        error: (e) => `${e}`,\n      }\n    );\n  };\n  React.useEffect(() => {\n    console.log(state.response);\n  }, [state.response])\n  return (\n    <ContainerStyled>\n      <ToastAlert />\n      <h1>Prueba de Frecuencia &#9997;</h1>\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <FormLabel>Valor de alpha</FormLabel>\n          <FormControl\n            as=\"select\"\n            value={state.alpha}\n            name=\"alpha\"\n            onChange={handleChange}\n          >\n            {alphaValues.map((value, index) => (\n              <option key={index} value={value}>\n                {value}\n              </option>\n            ))}\n          </FormControl>\n        </FormGroup>\n        <FormGroup>\n          <FormLabel>Número de grupos</FormLabel>\n          <FormControl\n            value={state?.numberGroups}\n            type=\"number\"\n            name=\"numberGroups\"\n            onChange={handleChange}\n          />\n        </FormGroup>\n        {pseudoNumbers ? (\n          <>\n            <FormLabel>\n              Total de números generados actualmente:\n              {pseudoNumbers[\"n\"].length}. <b className=\"b-link\">Ver números</b>\n            </FormLabel>\n            <br />\n            {state.loading ? (\n              <LoaderDots />\n            ) : (\n              <PrimaryButton type=\"submit\">Realizar test</PrimaryButton>\n            )}\n          </>\n        ) : (\n          <>\n            <FormLabel>\n              Aún no tienes números pseudoaleatorios generados 😥\n            </FormLabel>\n            <br />\n            <SecondaryButton onClick={returnToGenerator}>\n              Ir a generarlos\n            </SecondaryButton>\n          </>\n        )}\n      </Form>\n      {state.response && (\n        <Table striped hover responsive className=\"table-sm mt-4\">\n          <thead>\n            <tr>\n              <th>Intervalo</th>\n              <th>FE</th>\n              <th>F0</th>\n              <th>Grupo</th>\n            </tr>\n          </thead>\n          <tbody>\n            {state.response?.dfFrequency?.map((item, index) => (\n              <tr key={index}>\n                <td>{item[\"Interval\"]}</td>\n                <td>{item[\"FE\"]}</td>\n                <td>{item[\"FO\"]}</td>\n                <td>{item[\"Group\"]}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </ContainerStyled>\n  );\n}\n"],"sourceRoot":""}