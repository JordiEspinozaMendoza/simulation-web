{"version":3,"sources":["actions/generatorActions.js","actions/smirnovActions.js","actions/frequencyActions.js","api/index.js","reducers/generatorReducers.js","reducers/smirnovReducers.js","reducers/frequencyReducers.js","constants/generatorConstants.js","constants/smirnovConstants.js","constants/frequencyConstants.js","views/SmirnovView.js"],"names":["generatorActions","UPDATE_VALUE","SUBMIT_FORM","SUCCESS_GENERATOR","REQUEST_GENERATOR","RESET_GENERATOR","FAIL_GENERATOR","SET_DEFAULT_GENERATOR","SAVE_PSEUDO_NUMBERS","smirnovActions","SUCCESS_SMIRNOV","REQUEST_SMIRNOV","RESET_SMIRNOV","FAIL_SMIRNOV","SET_MODAL","frequencyActions","SUCCESS_FREQUENCY","REQUEST_FREQUENCY","RESET_FREQUENCY","FAIL_FREQUENCY","callApi","url","method","body","constants","dispatch","a","REQUEST","SUCCESS","FAIL","type","axios","data","headers","payload","message","generatorReducers","state","action","actions","key","value","loading","error","response","pseudoNumbers","x0","c","m","localStorage","removeItem","setItem","JSON","stringify","smirnovReducers","max","about","showModal","show","frequencyReducers","console","log","generatorInitialState","success","undefined","smirnovInitialState","percent","numberGroups","frequencyInitialState","alpha","ResponseContainer","styled","div","SmirnovView","useReducer","reducer","initialState","history","useHistory","getItem","parse","handleChange","event","target","name","showModalHandler","onSubmit","preventDefault","toast","promise","e","onChange","length","className","onClick","push","onHandleClose"],"mappings":"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","file":"static/js/6.52316483.chunk.js","sourcesContent":["export const generatorActions = {\n  UPDATE_VALUE: \"UPDATE_VALUE\",\n  SUBMIT_FORM: \"SUBMIT_FORM\",\n  SUCCESS_GENERATOR: \"SUCCESS_GENERATOR\",\n  REQUEST_GENERATOR: \"REQUEST_GENERATOR\",\n  RESET_GENERATOR: \"RESET_GENERATOR\",\n  FAIL_GENERATOR: \"FAIL_GENERATOR\",\n  SET_DEFAULT_GENERATOR: \"SET_DEFAULT_GENERATOR\",\n  SAVE_PSEUDO_NUMBERS: \"SAVE_PSEUDO_NUMBERS\"\n};\n","export const smirnovActions = {\n  UPDATE_VALUE: \"UPDATE_VALUE\",\n  SUBMIT_FORM: \"SUBMIT_FORM\",\n  SUCCESS_SMIRNOV: \"SUCCESS_SMIRNOV\",\n  REQUEST_SMIRNOV: \"REQUEST_SMIRNOV\",\n  RESET_SMIRNOV: \"RESET_SMIRNOV\",\n  FAIL_SMIRNOV: \"FAIL_SMIRNOV\",\n  SET_MODAL: \"SET_MODAL\",\n\n};\n","export const frequencyActions = {\n    UPDATE_VALUE: \"UPDATE_VALUE\",\n    SUBMIT_FORM: \"SUBMIT_FORM\",\n    SUCCESS_FREQUENCY: \"SUCCESS_FREQUENCY\",\n    REQUEST_FREQUENCY: \"REQUEST_FREQUENCY\",\n    RESET_FREQUENCY: \"RESET_FREQUENCY\",\n    FAIL_FREQUENCY: \"FAIL_FREQUENCY\",\n    SET_MODAL: \"SET_MODAL\",\n  \n  };\n  ","import axios from \"axios\";\n\nexport async function callApi(url, method, body, constants, dispatch) {\n  const { REQUEST, SUCCESS, FAIL } = constants;\n  try {\n    dispatch({ type: REQUEST });\n    const { data } = await axios({\n      method,\n      url: url,\n      data: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    dispatch({ type: SUCCESS, payload: data});\n  } catch (error) {\n    dispatch({\n      type: FAIL,\n      payload: error.message,\n    });\n    throw \"Ingresa parametros correctos\"\n  }\n}\n","import { generatorActions as actions } from \"../actions\";\nexport const generatorReducers = (state = {}, action) => {\n  switch (action.type) {\n    case actions.UPDATE_VALUE:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    case actions.FAIL_GENERATOR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case actions.SUCCESS_GENERATOR:\n      return {\n        ...state,\n        loading: false,\n        response: action.payload.response,\n        pseudoNumbers: action.payload.pseudoNumbers,\n      };\n    case actions.REQUEST_GENERATOR:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SET_DEFAULT_GENERATOR:\n      return {\n        ...state,\n        x0: 17,\n        a: 101,\n        c: 221,\n        m: 17001,\n      };\n    case actions.SAVE_PSEUDO_NUMBERS:\n      if (state.response) {\n        localStorage.removeItem(\"pseudo-numbers\");\n        localStorage.removeItem(\"pseudo-numbers-modal\");\n        localStorage.setItem(\n          \"pseudo-numbers\",\n          JSON.stringify(state.pseudoNumbers)\n        );\n        localStorage.setItem(\n          \"pseudo-numbers-modal\",\n          JSON.stringify(state.response)\n        );\n      }\n      return state;\n  }\n};\n","import { smirnovActions as actions } from \"../actions\";\nexport const smirnovReducers = (state = {}, action) => {\n  switch (action.type) {\n    case actions.UPDATE_VALUE:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    case actions.FAIL_SMIRNOV:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case actions.SUCCESS_SMIRNOV:\n      return {\n        ...state,\n        loading: false,\n        response: {\n          max: action.payload[\"max\"],\n          message: action.payload[\"message\"],\n          about: action.payload[\"about\"],\n        },\n      };\n    case actions.REQUEST_SMIRNOV:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SET_MODAL:\n      return {\n        ...state,\n        showModal: action.show,\n      };\n  }\n};\n","import { frequencyActions as actions } from \"../actions\";\nexport const frequencyReducers = (state = {}, action) => {\n  switch (action.type) {\n    case actions.UPDATE_VALUE:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    case actions.FAIL_FREQUENCY:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case actions.SUCCESS_FREQUENCY:\n      console.log(action.payload);\n      return {\n        ...state,\n        loading: false,\n        response: action.payload,\n      };\n    case actions.REQUEST_FREQUENCY:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SET_MODAL:\n      return {\n        ...state,\n        showModal: action.show,\n      };\n  }\n};\n","export const generatorInitialState = {\n  x0: 0,\n  a: 0,\n  c: 0,\n  m: 0,\n  loading: false,\n  error: false,\n  success: false,\n  message: \"\",\n  response: undefined,\n  pseudoNumbers: undefined,\n};\n","export const smirnovInitialState = {\n    percent: 0,\n    numberGroups: 0,\n    loading: false,\n    error: false,\n    success: false,\n    message: \"\",\n    response: undefined,\n    showModal: false,\n \n  };\n  ","export const frequencyInitialState = {\n  alpha: 0,\n  numberGroups: 0,\n  loading: false,\n  error: false,\n  success: false,\n  message: \"\",\n  response: undefined,\n\n  showModal: false,\n};\n","import React, { useReducer } from \"react\";\nimport { PrimaryButton, SecondaryButton, ModalNumbers } from \"../components\";\nimport { Form, FormGroup, FormLabel, FormControl } from \"react-bootstrap\";\n\nimport { callApi } from \"../api\";\nimport { LoaderDots } from \"../components\";\nimport { ContainerStyled } from \"../utils\";\nimport { ToastAlert } from \"../components\";\nimport toast from \"react-hot-toast\";\n\nimport { smirnovActions as actions } from \"../actions\";\nimport { smirnovReducers as reducer } from \"../reducers\";\nimport { smirnovInitialState as initialState } from \"../constants\";\n\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst ResponseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  margin-top: 2rem;\n  width: 80%;\n`;\nexport default function SmirnovView() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const history = useHistory();\n  const pseudoNumbers =\n    localStorage.getItem(\"pseudo-numbers\") &&\n    JSON.parse(localStorage.getItem(\"pseudo-numbers\"));\n  const returnToGenerator = () => {\n    history.push(\"/exercises/generator\");\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    dispatch({\n      type: actions.UPDATE_VALUE,\n      payload: {\n        key: name,\n        value,\n      },\n    });\n  };\n  const showModalHandler = (show) => {\n    dispatch({\n      type: actions.SET_MODAL,\n      show: show,\n    });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    toast.promise(\n      callApi(\n        \"/api/smirnov/test/\",\n        \"POST\",\n        {\n          pseudoNumbers: pseudoNumbers,\n          percent: state?.percent,\n          numberGroups: state?.numberGroups,\n        },\n        {\n          SUCCESS: actions.SUCCESS_SMIRNOV,\n          FAIL: actions.FAIL_SMIRNOV,\n          REQUEST: actions.REQUEST_SMIRNOV,\n        },\n        dispatch\n      ),\n      {\n        loading: \"Realizando prueba de smirnov\",\n        success: \"Prueba finalizada\",\n        error: (e) => `${e}`,\n      }\n    );\n  };\n  return (\n    <ContainerStyled>\n      <h1>Prueba de Smirnov &#9997;</h1>\n\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <FormLabel>Porcentaje &#x25;</FormLabel>\n          <FormControl\n            value={state.percent}\n            type=\"number\"\n            name=\"percent\"\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormLabel>Número de grupos</FormLabel>\n          <FormControl\n            value={state?.numberGroups}\n            type=\"number\"\n            name=\"numberGroups\"\n            onChange={handleChange}\n          />\n        </FormGroup>\n        {pseudoNumbers ? (\n          <>\n            <FormLabel>\n              Total de números generados actualmente:\n              {pseudoNumbers[\"n\"].length}.\n              <b className=\"b-link\" onClick={()=>showModalHandler(true)}>\n                Ver números\n              </b>\n            </FormLabel>\n            <br />\n            {state.loading ? (\n              <LoaderDots />\n            ) : (\n              <PrimaryButton type=\"submit\">Realizar test</PrimaryButton>\n            )}\n          </>\n        ) : (\n          <>\n            <FormLabel>\n              Aún no tienes números pseudoaleatorios generados 😥\n            </FormLabel>\n            <br />\n            <SecondaryButton onClick={returnToGenerator}>\n              Ir a generarlos\n            </SecondaryButton>\n          </>\n        )}\n      </Form>\n      {state.response && (\n        <ResponseContainer>\n          <h2>Resultados 💯</h2>\n          <span>\n            <b>Di de tablas </b>: {state.response.about}\n          </span>\n          <br />\n          <span>\n            <b>Di máximo</b>: {state.response.max}\n          </span>\n          <br />\n\n          <span>\n            <b>Resultado: </b>\n            {state.response.message}\n          </span>\n        </ResponseContainer>\n      )}\n      <ToastAlert />\n      <ModalNumbers show={state.showModal} onHandleClose={()=>showModalHandler(false)} />\n    </ContainerStyled>\n  );\n}\n"],"sourceRoot":""}